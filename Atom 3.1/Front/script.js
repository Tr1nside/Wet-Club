const body = document.body;
const nightModeButton = document.querySelector('.night-mode');
const tabs = document.querySelector('.tabs');
let tabCounter = 2; // –°—á–µ—Ç—á–∏–∫ –¥–ª—è –Ω–æ–≤—ã—Ö –≤–∫–ª–∞–¥–æ–∫
const consoleOutput = document.querySelector('.console-output');
const consoleInput = document.querySelector('.console-input');
let codeMirrorInstances = {};

consoleInput.addEventListener('focus', () => {
    if (consoleInput.readOnly) {
        consoleInput.blur(); // –£–±–∏—Ä–∞–µ–º —Ñ–æ–∫—É—Å, –µ—Å–ª–∏ –ø–æ–ª–µ readonly
    }
});

// –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ
consoleInput.readOnly = true;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ consoleInput
function updateConsoleInputClass() {
    if (consoleInput.readOnly) {
        consoleInput.classList.remove('console-input-active');
    } else {
        consoleInput.classList.add('console-input-active');
    }
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∞—Å—Å–∞
updateConsoleInputClass();

// –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
function simulateServerRequest() {
    consoleOutput.value += "\n–°–µ—Ä–≤–µ—Ä: –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä. –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:";
    consoleInput.readOnly = false;
    updateConsoleInputClass();
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∏–ª–∏ —É—Å–ª–æ–≤–∏–µ –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
document.addEventListener('keydown', (event) => {
    if (event.key === 'Enter') {
        simulateServerRequest();
    }
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏
nightModeButton.addEventListener('click', () => {
    body.classList.toggle('dark-mode');
    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–∫–∞ –ª—É–Ω—ã –Ω–∞ —Å–æ–ª–Ω—Ü–µ –∏ –æ–±—Ä–∞—Ç–Ω–æ
    nightModeButton.textContent = body.classList.contains('dark-mode') ? '‚òÄÔ∏è' : 'üåô';

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–º—ã CodeMirror –ø—Ä–∏ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞
    for (const tabId in codeMirrorInstances) {
        const cm = codeMirrorInstances[tabId];
        cm.setOption("theme", body.classList.contains('dark-mode') ? "dracula" : "default");
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–æ–≤ —Å—Ç—Ä–æ–∫
function updateLineNumbers(cm, lineNumbers) {
    const numberOfLines = cm.lineCount();
    let numbers = "";
    for (let i = 1; i <= numberOfLines; i++) {
        numbers += i + "<br>";
    }
    lineNumbers.innerHTML = numbers;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏ –∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
function createNewTab() {
    tabCounter++;
    const newTabId = `tab${tabCounter}`;

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
    const newTab = document.createElement('div');
    newTab.classList.add('tab');
    newTab.dataset.tab = newTabId;
    newTab.innerHTML = `<span>file${tabCounter - 1}.py</span><span class="close-tab">√ó</span>
                            <input type="text" class="tab-input" value="file${tabCounter - 1}.py">`;
    tabs.insertBefore(newTab, document.querySelector('.tab[data-tab="tab2"]'));

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è CodeMirror
    const codeArea = document.createElement('div');
    codeArea.classList.add('code-area');
    codeArea.dataset.tabContent = newTabId;
    document.querySelector('.container').insertBefore(codeArea, document.querySelector('.toolbar'));

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º CodeMirror
    const cm = CodeMirror(codeArea, {
        mode: "python",
        theme: body.classList.contains('dark-mode') ? "dracula" : "default",
        lineNumbers: true,
        gutters: ["CodeMirror-linenumbers"]
    });

    codeMirrorInstances[newTabId] = cm;

    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
    activateTab(newTab);

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
    newTab.addEventListener('dblclick', function () {
        startEditingTab(this);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ —Å input
    const inputElement = newTab.querySelector('.tab-input');
    inputElement.addEventListener('blur', function () {
        finishEditingTab(newTab);
    });
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter
    inputElement.addEventListener('keydown', function (event) {
        if (event.key === 'Enter') {
            finishEditingTab(newTab);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∫–ª–∞–¥–∫–∏
function activateTab(tab) {
    const tabId = tab.dataset.tab;

    // –°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
    document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
    document.querySelectorAll('.code-area[data-tab-content]').forEach(content => {
        content.style.display = 'none';
    });

    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
    tab.classList.add('active');
    const codeArea = document.querySelector(`.code-area[data-tab-content="${tabId}"]`);
    codeArea.style.display = 'block';

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã CodeMirror
    if (codeMirrorInstances[tabId]) {
        codeMirrorInstances[tabId].refresh();
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –≤–∫–ª–∞–¥–∫–∏
function closeTab(tab) {
    const tabId = tab.dataset.tab;

    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤–∫–ª–∞–¥–∫–∏ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const tabElement = document.querySelector(`.tab[data-tab="${tabId}"]`);
    const codeAreaElement = document.querySelector(`.code-area[data-tab-content="${tabId}"]`);

    // –£–¥–∞–ª—è–µ–º –≤–∫–ª–∞–¥–∫—É –∏ –∫–æ–Ω—Ç–µ–Ω—Ç
    tabElement.remove();
    codeAreaElement.remove();

    // –£–¥–∞–ª—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä CodeMirror, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (codeMirrorInstances[tabId]) {
        //codeMirrorInstances[tabId].toTextArea(); // –ù–µ –Ω—É–∂–Ω–æ, —Ç.–∫. –Ω–µ—Ç textarea
        delete codeMirrorInstances[tabId];
    }

    // –ï—Å–ª–∏ –∑–∞–∫—Ä—ã–ª–∏ –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É, –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É (–µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    if (tab.classList.contains('active')) {
        const firstTab = document.querySelector('.tab:not([data-tab="tab2"])');
        if (firstTab) {
            activateTab(firstTab);
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
function startEditingTab(tab) {
    tab.classList.add('editing');
    const inputElement = tab.querySelector('.tab-input');
    inputElement.style.display = 'block';
    inputElement.focus();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏
function finishEditingTab(tab) {
    tab.classList.remove('editing');
    const inputElement = tab.querySelector('.tab-input');
    const spanElement = tab.querySelector('span');
    spanElement.textContent = inputElement.value;
    inputElement.style.display = 'none';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –≤–∫–ª–∞–¥–∫–∏
tabs.addEventListener('click', (event) => {
    if (event.target.classList.contains('tab')) {
        const tab = event.target;
        if (tab.dataset.tab === 'tab2') { // –ï—Å–ª–∏ –∫–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ "+", —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
            createNewTab();
        } else {
            activateTab(tab);
        }
    } else if (event.target.classList.contains('close-tab')) {
        const tab = event.target.parentNode;
        closeTab(tab);
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∫–ª–∞–¥–∫–∏ –ø–æ –¥–≤–æ–π–Ω–æ–º—É –∫–ª–∏–∫—É
tabs.addEventListener('dblclick', (event) => {
    if (event.target.classList.contains('tab') && event.target.dataset.tab !== 'tab2') {
        startEditingTab(event.target);
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏ –∏ CodeMirror
const initialTab = document.querySelector('.tab[data-tab="tab1"]');
const initialCodeArea = document.querySelector('.code-area[data-tab-content="tab1"]');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º CodeMirror
const cm = CodeMirror(initialCodeArea, {
    mode: "python",
    theme: body.classList.contains('dark-mode') ? "dracula" : "default",
    lineNumbers: true,
    gutters: ["CodeMirror-linenumbers"]
});

codeMirrorInstances['tab1'] = cm;
activateTab(initialTab);

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
initialTab.addEventListener('dblclick', function () {
    startEditingTab(this);
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ —Å input
const initialInputElement = initialTab.querySelector('.tab-input');
initialInputElement.addEventListener('blur', function () {
    finishEditingTab(initialTab);
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Enter
initialInputElement.addEventListener('keydown', function (event) {
    if (event.key === 'Enter') {
        finishEditingTab(initialTab);
    }
});


// ------------------------------------------------------------


const storedCode = localStorage.getItem("code");
if (storedCode) {
    document.getElementById("codeInput").value = storedCode; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
}

const storedCons = localStorage.getItem("console");
if (storedCode) {
    document.getElementById("console").innerText = storedCons; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ –≤—ã–≤–æ–¥–∞
}

const socket = io();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ CodeMirror —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
let editor = CodeMirror.fromTextArea(document.getElementById('codeInput'), {
    lineNumbers: true,
    mode: "python",  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∫–∞–∫ —è–∑—ã–∫ –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏
    theme: "default" // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ç–µ–º—É
});

editor.on('change', function () {
    const code = editor.getValue();
    localStorage.setItem("code", code); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ localStorage
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–≤–µ—Ç–ª–æ–π –∏ —Ç—ë–º–Ω–æ–π —Ç–µ–º–æ–π
let darkMode = false;

if (!localStorage.getItem("darkMod")) {
    localStorage.setItem("darkMod", false);
    darkMode = false;
} else {
    darkMode = localStorage.getItem("darkMod");
    if (darkMode) {
        document.body.classList.toggle("dark", darkMode);  // –ú–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Ç–µ–º—ã
        editor.setOption("theme", darkMode ? "dracula" : "default"); // –ú–µ–Ω—è–µ–º —Ç–µ–º—É CodeMirror
    }
}

function toggleTheme() {
    darkMode = !darkMode;
    localStorage.setItem("darkMod", darkMode);
    document.body.classList.toggle("dark", darkMode);  // –ú–µ–Ω—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Ç–µ–º—ã
    editor.setOption("theme", darkMode ? "dracula" : "default"); // –ú–µ–Ω—è–µ–º —Ç–µ–º—É CodeMirror
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
function executeCode() {
    clearConsole();  // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –≤—ã–≤–æ–¥–æ–º
    const code = editor.getValue();  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞
    socket.emit('execute', code);  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ WebSocket
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –≤—ã–≤–æ–¥–∞
function clearConsole() {
    localStorage.setItem("console", '')
    document.getElementById("console").innerText = "";
    document.getElementById("consoleInput").style.display = "none";  // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
function appendToConsole(text) {
    const consoleDiv = document.getElementById("console");
    consoleDiv.innerText += text;  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
    consoleDiv.scrollTop = consoleDiv.scrollHeight;  // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫–æ–Ω—Å–æ–ª—å –≤–Ω–∏–∑
    localStorage.setItem("console", document.getElementById("console").innerText)
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
socket.on('console_output', (data) => {
    appendToConsole(data + "\n");  // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—Ä–æ—Å–∏–ª –≤–≤–æ–¥, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    document.getElementById("consoleInput").style.display = "block";
    document.getElementById("consoleInput").focus();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ Enter –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∫–æ–Ω—Å–æ–ª–∏
function handleConsoleKeyPress(event) {
    if (event.key === "Enter") {
        const inputField = event.target;
        const value = inputField.value;  // –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥—ë–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        socket.emit('console_input', value);  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        appendToConsole(value + "\n");  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
        inputField.value = "";  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        inputField.style.display = "none";  // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
        event.preventDefault();  // –û—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–ª–∞–≤–∏—à–∏
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ–Ω—Å–æ–ª–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
function saveCodeToFile() {
    const consoleContent = document.getElementById("codeInput").innerText;  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å–æ–ª–∏
    const blob = new Blob([consoleContent], { type: "text/plain;charset=utf-8" });  // –°–æ–∑–¥–∞—ë–º Blob –æ–±—ä–µ–∫—Ç

    // –°–æ–∑–¥–∞—ë–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Blob –≤ URL

    // –£–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    link.download = "code.txt";

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    link.click();

    // –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–æ –≤—ã–∑–æ–≤–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
    // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±—Ä–∞—É–∑–µ—Ä–∞
}

function saveConsoleToFile() {
    const consoleContent = document.getElementById("console").innerText;  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å–æ–ª–∏
    const blob = new Blob([consoleContent], { type: "text/plain;charset=utf-8" });  // –°–æ–∑–¥–∞—ë–º Blob –æ–±—ä–µ–∫—Ç

    // –°–æ–∑–¥–∞—ë–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º Blob –≤ URL

    // –£–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    link.download = "console_output.txt";

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∫–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    link.click();

    // –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–æ –≤—ã–∑–æ–≤–µ—Ç –¥–∏–∞–ª–æ–≥–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
    // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±—Ä–∞—É–∑–µ—Ä–∞
}

// –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ –≤—ã–≤–æ–¥–∞
function clearConsole() {
    document.getElementById("console").innerText = "";  // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Å–æ–ª—å
    document.getElementById("consoleInput").style.display = "none";  // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message) {
    const notification = document.createElement("div");
    notification.className = "notification";  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification.innerText = message;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è

    // –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ DOM
    document.body.appendChild(notification);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    setTimeout(() => {
        notification.style.display = "block";  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        notification.style.opacity = 1;  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–Ω—É—é –≤–∏–¥–∏–º–æ—Å—Ç—å
    }, 10);

    // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    setTimeout(() => {
        notification.style.opacity = 0;  // –£–º–µ–Ω—å—à–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –¥–æ 0
        setTimeout(() => {
            notification.remove();  // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–∑ DOM
        }, 500);
    }, 1000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ–Ω—Å–æ–ª–∏ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard() {
    const consoleContent = document.getElementById("console").innerText;  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å–æ–ª–∏
    navigator.clipboard.writeText(consoleContent)  // –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
        .then(() => {
            showNotification("–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!");  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        })
        .catch(err => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: ", err);  // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        });
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∏ –≤—Å—Ç–∞–≤–∫–∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä
function loadFile() {
    const fileInput = document.getElementById("fileInput"); // –ü–æ–ª—É—á–∞–µ–º input-—Ñ–∞–π–ª
    fileInput.click(); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞

    fileInput.onchange = function () {
        const file = fileInput.files[0]; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        if (!file) return;

        const reader = new FileReader();
        reader.onload = function (event) {
            editor.setValue(event.target.result); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä
        };
        reader.readAsText(file);
    };
}